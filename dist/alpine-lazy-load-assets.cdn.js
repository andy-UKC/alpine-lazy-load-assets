(()=>{function m(c){document.addEventListener("alpine:init",()=>{c.store("lazyLoadedAssets",{loaded:new Set,check(e){return Array.isArray(e)?e.every(t=>this.loaded.has(t)):this.loaded.has(e)},markLoaded(e){Array.isArray(e)?e.forEach(t=>this.loaded.add(t)):this.loaded.add(e)}})});let u=e=>new CustomEvent(e,{bubbles:!0,composed:!0,cancelable:!0}),b=(e,t={},r,s)=>{let n=document.createElement(e);return Object.entries(t).forEach(([o,a])=>n[o]=a),r&&(s?r.insertBefore(n,s):r.appendChild(n)),n},f=(e,t,r={},s=null,n=null)=>{let o=e==="link"?`link[href="${t}"]`:`script[src="${t}"]`;if(document.querySelector(o)||c.store("lazyLoadedAssets").check(t))return Promise.resolve();let a=e==="link"?{...r,href:t}:{...r,src:t},d=b(e,a,s,n);return new Promise((l,i)=>{d.onload=()=>{c.store("lazyLoadedAssets").markLoaded(t),l()},d.onerror=()=>{i(new Error(`Failed to load ${e}: ${t}`))}})},h=async(e,t,r=null,s=null)=>{let n={type:"text/css",rel:"stylesheet"};t&&(n.media=t);let o=document.head,a=null;if(r&&s){let d=document.querySelector(`link[href*="${s}"]`);d?(o=d.parentElement,a=r==="before"?d:d.nextSibling):(console.warn(`Target (${s}) not found for ${e}. Appending to head.`),o=document.head,a=null)}await f("link",e,n,o,a)},y=async(e,t,r=null,s=null)=>{let n=document.head,o=null;if(r&&s){let a=document.querySelector(`script[src*="${s}"]`);a?(n=a.parentElement,o=r==="before"?a:a.nextSibling):(console.warn(`Target (${s}) not found for ${e}. Falling back to head or body.`),n=document.head,o=null)}else(t.has("body-start")||t.has("body-end"))&&(n=document.body,t.has("body-start")&&(o=document.body.firstChild));await f("script",e,{},n,o)};c.directive("load-css",(e,{expression:t},{evaluate:r})=>{let s=r(t),n=e.media,o=e.getAttribute("data-dispatch"),a=e.getAttribute("data-css-before")?"before":e.getAttribute("data-css-after")?"after":null,d=e.getAttribute("data-css-before")||e.getAttribute("data-css-after")||null;Promise.all(s.map(l=>h(l,n,a,d))).then(()=>{o&&window.dispatchEvent(u(`${o}-css`))}).catch(console.error)}),c.directive("load-js",(e,{expression:t,modifiers:r},{evaluate:s})=>{let n=s(t),o=new Set(r),a=e.getAttribute("data-js-before")?"before":e.getAttribute("data-js-after")?"after":null,d=e.getAttribute("data-js-before")||e.getAttribute("data-js-after")||null,l=e.getAttribute("data-dispatch");Promise.all(n.map(i=>y(i,o,a,d))).then(()=>{l&&window.dispatchEvent(u(`${l}-js`))}).catch(console.error)})}document.addEventListener("alpine:initializing",()=>{m(window.Alpine)});})();
